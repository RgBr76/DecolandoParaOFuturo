from dash import Dash, html, dcc
from dash.dependencies import Input, Output
import dash_bootstrap_components as dbc
from app import app
import graficos_aviacao, formulario_aviacao, analises_avancadas

# Configura√ß√£o da navega√ß√£o com base na AZUL airlines 
navegacao = dbc.NavbarSimple(
    children=[
        dbc.NavItem(dbc.NavLink("Dashboard", href="/graficos", className="nav-link-custom")),
        dbc.NavItem(dbc.NavLink("Previs√£o de Falhas", href="/formulario", className="nav-link-custom")),
        dbc.NavItem(dbc.NavLink("An√°lises", href="/analises", className="nav-link-custom")),
    ],
    brand="Sistema de Gest√£o de Avia√ß√£o",
    brand_href="/",
    color="primary",
    dark=True,
    className="mb-4",
    style={"boxShadow": "0 2px 4px rgba(0,0,0,0.1)"}
)

# P√°gina inicial
pagina_inicial = dbc.Container([
    dbc.Row([
        dbc.Col([
            html.Div([
                html.H1("Bem-vindo ao Sistema de Gest√£o de Avia√ß√£o", 
                    className="display-4 text-center mb-4 text-dark"),
                html.P("Sistema completo para an√°lise e previs√£o de falhas em aeronaves",
                    className="lead text-center text-muted mb-5"),
                
                dbc.CardGroup([
                    dbc.Card([
                        dbc.CardBody([
                            html.H2("üìä", className="text-center mb-3"),
                            html.H4("Dashboard Anal√≠tico", className="card-title text-center"),
                            html.P("Visualize estat√≠sticas, tend√™ncias e insights sobre a frota de aeronaves", 
                                className="card-text"),
                            dbc.Button("Acessar Dashboard", href="/graficos", color="primary", 
                                    className="mt-3 w-100")
                        ])
                    ], className="m-2"),
                    
                    dbc.Card([
                        dbc.CardBody([
                            html.H2("üõ†Ô∏è", className="text-center mb-3"),
                            html.H4("Previs√£o de Falhas", className="card-title text-center"),
                            html.P("Preveja riscos de falha baseado nas caracter√≠sticas da aeronave", 
                                className="card-text"),
                            dbc.Button("Fazer Previs√£o", href="/formulario", color="danger", 
                                    className="mt-3 w-100")
                        ])
                    ], className="m-2"),
                    
                    dbc.Card([
                        dbc.CardBody([
                            html.H2("üìà", className="text-center mb-3"),
                            html.H4("Relat√≥rios Avan√ßados", className="card-title text-center"),
                            html.P("An√°lises detalhadas e relat√≥rios t√©cnicos da opera√ß√£o", 
                                className="card-text"),
                            dbc.Button("Ver An√°lises", href="/analises", color="info", 
                                    className="mt-3 w-100")
                        ])
                    ], className="m-2"),
                ], className="mb-5"),
                
                html.Hr(className="my-5"),
                
                # Estat√≠sticas r√°pidas
                html.H3("Vis√£o Geral do Sistema", className="text-center mb-4"),
                dbc.Row([
                    dbc.Col([
                        dbc.Card([
                            dbc.CardBody([
                                html.H4("2.000+", className="text-primary"),
                                html.P("Aeronaves Monitoradas", className="text-muted")
                            ])
                        ], className="text-center border-0 shadow-sm")
                    ], md=3),
                    dbc.Col([
                        dbc.Card([
                            dbc.CardBody([
                                html.H4("24.2%", className="text-warning"),
                                html.P("Taxa de Falha M√©dia", className="text-muted")
                            ])
                        ], className="text-center border-0 shadow-sm")
                    ], md=3),
                    dbc.Col([
                        dbc.Card([
                            dbc.CardBody([
                                html.H4("88.7%", className="text-success"),
                                html.P("Precis√£o do Modelo", className="text-muted")
                            ])
                        ], className="text-center border-0 shadow-sm")
                    ], md=3),
                    dbc.Col([
                        dbc.Card([
                            dbc.CardBody([
                                html.H4("8", className="text-info"),
                                html.P("Modelos de Aeronaves", className="text-muted")
                            ])
                        ], className="text-center border-0 shadow-sm")
                    ], md=3),
                ]),
                
                # Informa√ß√µes t√©cnicas sobre os dados a serem mostrados
                html.Div([
                    html.H4("Sobre o Sistema", className="mt-5 mb-3"),
                    html.P("""
                        Este sistema utiliza machine learning para prever falhas cr√≠ticas em aeronaves 
                        baseado em dados hist√≥ricos de opera√ß√£o, manuten√ß√£o e caracter√≠sticas t√©cnicas. 
                        O modelo foi treinado com dados de 2.000 aeronaves e alcan√ßa 88.7% de precis√£o 
                        na previs√£o de falhas.
                    """, className="text-justify"),
                    
                    html.H5("Funcionalidades Principais:", className="mt-4"),
                    html.Ul([
                        html.Li("An√°lise explorat√≥ria completa da frota"),
                        html.Li("Previs√£o de risco de falha em tempo real"),
                        html.Li("Compara√ß√£o entre modelos e companhias"),
                        html.Li("Monitoramento de indicadores de manuten√ß√£o"),
                        html.Li("Relat√≥rios t√©cnicos detalhados")
                    ]),
                    
                    html.H5("Vari√°veis Analisadas:", className="mt-4"),
                    html.Ul([
                        html.Li("Idade da aeronave e horas de voo"),
                        html.Li("Tipo de motor e modelo da aeronave"),
                        html.Li("Hist√≥rico de manuten√ß√£o"),
                        html.Li("Ciclos de pouso e decolagem"),
                        html.Li("Condi√ß√µes operacionais (temperatura)")
                    ])
                ], className="mt-5 p-4 bg-light rounded")
                
            ])
        ])
    ])
], fluid=True)

# P√°gina de an√°lises (pode ser expandida posteriormente)
pagina_analises = dbc.Container([
    html.H1("An√°lises Avan√ßadas", className="text-center my-4"),
    html.P("P√°gina em desenvolvimento - Em breve mais an√°lises detalhadas", 
        className="text-center text-muted lead"),
    dbc.Alert(
        "Esta se√ß√£o est√° em desenvolvimento e incluir√° relat√≥rios t√©cnicos avan√ßados, "
        "tend√™ncias temporais e an√°lises preditivas detalhadas.",
        color="info",
        className="text-center"
    )
])

# Layout principal da aplica√ß√£o
app.layout = html.Div([
    dcc.Location(id='url', refresh=False),
    navegacao,
    html.Div(id='page-content', style={'minHeight': '80vh'})
])

# Callback para roteamento de p√°ginas
@app.callback(
    Output('page-content', 'children'),
    [Input('url', 'pathname')]
)
def display_page(pathname):
    if pathname == '/formulario':
        return formulario_aviacao.layout
    elif pathname == '/graficos':
        return graficos_aviacao.layout
    elif pathname == '/analises':
        return analises_avancadas.layout
    else:
        return pagina_inicial

# CSS personalizado
app.index_string = '''
<!DOCTYPE html>
<html>
    <head>
        {%metas%}
        <title>Sistema de Gest√£o de Avia√ß√£o</title>
        {%favicon%}
        {%css%}
        <style>
            .nav-link-custom {
                font-weight: 500;
                transition: all 0.3s ease;
            }
            .nav-link-custom:hover {
                transform: translateY(-2px);
            }
            .card {
                transition: transform 0.2s ease, box-shadow 0.2s ease;
                border: none;
            }
            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            }
            .display-4 {
                background: linear-gradient(45deg, #3498db, #2c3e50);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
            }
        </style>
    </head>
    <body>
        {%app_entry%}
        <footer>
            {%config%}
            {%scripts%}
            {%renderer%}
        </footer>
    </body>
</html>
'''

if __name__ == '__main__':
    print("     Iniciando Sistema de Gest√£o de Avia√ß√£o...")
    print("     URLs dispon√≠veis:")
    print("   - http://localhost:8050/ (P√°gina Inicial)")
    print("   - http://localhost:8050/graficos (Dashboard)")
    print("   - http://localhost:8050/formulario (Previs√£o de Falhas)")
    print("   - http://localhost:8050/analises (An√°lises Avan√ßadas)")
    print("\n   Estat√≠sticas do sistema:")
    print("   - 2.000 aeronaves no dataset")
    print("   - Modelo com 88.7% de precis√£o")
    print("   - 8 tipos de aeronaves diferentes")
    print("   - 3 tipos de motor analisados")
    
    app.run(debug=True, host='0.0.0.0', port=8050)